// // –ó–∞–¥–∞–Ω–∏–µ 2 - —Ç–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞

// // +1. –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Ç–∞–π–º–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–µ–¥—ë—Ç –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –¥–∞—Ç—ã.
// // –¢–∞–∫–æ–π —Ç–∞–π–º–µ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –±–ª–æ–≥–∞—Ö –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç - –º–∞–≥–∞–∑–∏–Ω–∞—Ö,
// // —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π, –≤–æ –≤—Ä–µ–º—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏ —Ç.–¥.
// // –ü–æ—Å–º–æ—Ç—Ä–∏ –¥–µ–º–æ –≤–∏–¥–µ–æ —Ä–∞–±–æ—Ç—ã —Ç–∞–π–º–µ—Ä–∞.

// // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ñ—Ä–µ–π—Å–∞
// // –í HTML –µ—Å—Ç—å –≥–æ—Ç–æ–≤–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–∞, –ø–æ–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç—ã –∏ –∫–Ω–æ–ø–∫–∏,
// // –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Ç–∞–π–º–µ—Ä –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è.
// // 2. –î–æ–±–∞–≤—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

// // <input type="text" id="datetime-picker" />
// // <button type="button" data-start>Start</button>

// // <div class="timer">
// //   <div class="field">
// //     <span class="value" data-days>00</span>
// //     <span class="label">Days</span>
// //   </div>
// //   <div class="field">
// //     <span class="value" data-hours>00</span>
// //     <span class="label">Hours</span>
// //   </div>
// //   <div class="field">
// //     <span class="value" data-minutes>00</span>
// //     <span class="label">Minutes</span>
// //   </div>
// //   <div class="field">
// //     <span class="value" data-seconds>00</span>
// //     <span class="label">Seconds</span>
// //   </div>
// // </div>

// // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ flatpickr
// // +3. –ò—Å–ø–æ–ª—å–∑—É–π –±–∏–±–ª–∏–æ—Ç–µ–∫—É flatpickr –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–∑–≤–æ–ª–∏—Ç—å
// // –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫—Ä–æ—Å—Å–±—Ä–∞—É–∑–µ—Ä–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ –æ–¥–Ω–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
// // –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å CSS –∫–æ–¥ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç,
// //  –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω –∏–º–ø–æ—Ä—Ç, –∫—Ä–æ–º–µ —Ç–æ–≥–æ –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å–∞–Ω –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.

// // // –û–ø–∏—Å–∞–Ω –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
// // import flatpickr from 'flatpickr';
// // // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π
// // import 'flatpickr/dist/flatpickr.min.css';
// // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –æ–∂–∏–¥–∞–µ—Ç —á—Ç–æ –µ—ë –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ input[type="text"],
// //  –ø–æ—ç—Ç–æ–º—É –º—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤ HTML –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª–µ input#datetime - picker.

// // <input type="text" id="datetime-picker" />
// // –í—Ç–æ—Ä—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ flatpickr(selector, options) –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
// // –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è —Ç–µ–±—è –æ–±—ä–µ–∫—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–µ–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è.
// // –†–∞–∑–±–µ—Ä–∏—Å—å –∑–∞ —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∫–∞–∂–¥–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ ¬´Options¬ª –∏ –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ –≤ —Å–≤–æ–µ–º –∫–æ–¥–µ.

// // const options = {
// //   enableTime: true,
// //   time_24hr: true,
// //   defaultDate: new Date(),
// //   minuteIncrement: 1,
// //   onClose(selectedDates) {
// //     console.log(selectedDates[0]);
// //   },
// // };

// // +3.–í—ã–±–æ—Ä –¥–∞—Ç—ã
// // –ú–µ—Ç–æ–¥ onClose() –∏–∑ –æ–±—å–µ–∫—Ç–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑
// // –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç flatpickr.
// // –ò–º–µ–Ω–Ω–æ –≤ –Ω—ë–º —Å—Ç–æ–∏—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞—Ç—É –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
// // –ü–∞—Ä–∞–º–µ—Ç—Ä selectedDates —ç—Ç–æ –º–∞—Å—Å–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç, –ø–æ—ç—Ç–æ–º—É –º—ã –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç.

// // +4. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –¥–∞—Ç—É –≤ –ø—Ä–æ—à–ª–æ–º, –ø–æ–∫–∞–∂–∏ window.alert() —Å —Ç–µ–∫—Å—Ç–æ–º "Please choose a date in the future".
// // +5. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞–ª–∏–¥–Ω—É—é –¥–∞—Ç—É (–≤ –±—É–¥—É—â–µ–º), –∫–Ω–æ–ø–∫–∞ ¬´Start¬ª —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π.
// // –ö–Ω–æ–ø–∫–∞ ¬´Start¬ª –¥–æ–ª–∂–∞ –±—ã—Ç—å –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª –¥–∞—Ç—É –≤ –±—É–¥—É—â–µ–º.
// // +6. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´Start¬ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã —Å –º–æ–º–µ–Ω—Ç–∞ –Ω–∞–∂–∞—Ç–∏—è.
// // –û—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏
// // +7. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´Start¬ª —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –≤—ã—á–∏—Å–ª—è—Ç—å —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç—ã –∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–∞–π–º–µ—Ä–∞, –ø–æ–∫–∞–∑—ã–≤–∞—è —á–µ—Ç—ã—Ä–µ —Ü–∏—Ñ—Ä—ã: –¥–Ω–∏, —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx:xx:xx:xx.

// // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –±–æ–ª–µ–µ —á–µ–º –¥–≤—É—Ö —Ü–∏—Ñ—Ä.
// // +8. –¢–∞–π–º–µ—Ä –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –∫–æ–≥–¥–∞ –¥–æ—à–µ–ª –¥–æ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç—ã, —Ç–æ –µ—Å—Ç—å 00:00:00:00.
// // üí° –ù–µ –±—É–¥–µ–º —É—Å–ª–æ–∂–Ω—è—Ç—å. –ï—Å–ª–∏ —Ç–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –Ω–æ–≤—É—é –¥–∞—Ç—É
// // –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ - –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.

// // +9. –î–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π –≥–æ—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é convertMs,
// // –≥–¥–µ ms - —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∫–æ–Ω–µ—á–Ω–æ–π –∏ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö.

// // function convertMs(ms) {
// //   // Number of milliseconds per unit of time
// //   const second = 1000;
// //   const minute = second * 60;
// //   const hour = minute * 60;
// //   const day = hour * 24;

// //   // Remaining days
// //   const days = Math.floor(ms / day);
// //   // Remaining hours
// //   const hours = Math.floor((ms % day) / hour);
// //   // Remaining minutes
// //   const minutes = Math.floor(((ms % day) % hour) / minute);
// //   // Remaining seconds
// //   const seconds = Math.floor((((ms % day) % hour) % minute) / second);

// //   return { days, hours, minutes, seconds };
// // }

// // console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}
// // console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}
// // console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}
// // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
// // –§—É–Ω–∫—Ü–∏—è convertMs() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–º –æ—Å—Ç–∞–≤—à–∏–º—Å—è –≤—Ä–µ–º–µ–Ω–µ–º –¥–æ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç—ã.
//  –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –æ–Ω–∞ –Ω–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
// +10. –¢–æ –µ—Å—Ç—å, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å 4 –º–∏–Ω—É—Ç—ã –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Å–æ—Å—Ç–∞–≤–ª—è—é—â–µ–π –≤—Ä–µ–º–µ–Ω–∏, 
// —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω–µ—Ç 4, –∞ –Ω–µ 04.–í –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —Ç–∞–π–º–µ—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–ª—è—Ç—å 0 
// –µ—Å–ª–∏ –≤ —á–∏—Å–ª–µ –º–µ–Ω—å—à–µ –¥–≤—É—Ö —Å–∏–º–≤–æ–ª–æ–≤.–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é addLeadingZero(value), 
// –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ –º–µ—Ç–æ–¥ padStart() –∏ –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π –∏–Ω—Ç–µ—Ñ—Ä–µ–π—Å–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–π –∑–Ω–∞—á–µ–Ω–∏–µ.

// // 11. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
// // ‚ö†Ô∏è –°–ª–µ–¥—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —Å–¥–∞—á–µ –∑–∞–¥–∞–Ω–∏—è, –Ω–æ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–µ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π.

// // –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–º–µ—Å—Ç–æ window.alert() –∏—Å–ø–æ–ª—å–∑—É–π –±–∏–±–ª–∏–æ—Ç–µ–∫—É notiflix.

// –û–ø–∏—Å–∞–Ω –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
import flatpickr from 'flatpickr';
// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π
import 'flatpickr/dist/flatpickr.min.css';
import Notiflix from 'notiflix';

let userSelectedDate = null;
const options = {
  enableTime: true,
  time_24hr: true,
  defaultDate: new Date(),
  minuteIncrement: 1,
    onClose(selectedDates) {
        const delta = selectedDates[0].getTime() - Date.now();
        userSelectedDate = selectedDates[0];
        if (delta <= 0) {
            refs.startBtn.setAttribute("disabled", true);
            Notiflix.Notify.warning("Please choose a date in the future");
        } else {
            refs.startBtn.removeAttribute("disabled");
            updateTimePanels(convertMs(delta));
        }
    },
};

flatpickr("#datetime-picker", options);

const refs = {
    startBtn: document.querySelector("[data-start]"),
    days: document.querySelector("[data-days]"),
    hours: document.querySelector("[data-hours]"),
    minutes: document.querySelector("[data-minutes]"),
    seconds: document.querySelector("[data-seconds]"),
}

class Timer {
    constructor({ onTick }) {
        this. isActive = false;
        this.intervalId = null;
        this.onTick = onTick;
    }
        
    start() {
        if (!this.isActive) {
            this.isActive = true;
            this.intervalId = setInterval(() => {
                const currentTime = Date.now();
                const targetTimeInMs = userSelectedDate.getTime();
                const deltaTime = targetTimeInMs - currentTime;
                if (deltaTime <= 0) {
                    clearInterval(this.intervalId);
                } else {
                    this.onTick(convertMs(deltaTime));
                    console.log(deltaTime)
                }
            }, 1000);
        }
    }
}

const timer = new Timer({onTick: updateTimePanels});
refs.startBtn.addEventListener("click", timer.start.bind(timer));
refs.startBtn.setAttribute("disabled", true);

// function updateTimePanels({ days, hours, minutes, seconds }) {
//     refs.days.textContent = days;
//     refs.hours.textContent = hours;
//     refs.minutes.textContent = minutes;
//     refs.seconds.textContent = seconds;
// }
function updateTimePanels(time) {
    console.log(time);
    for (const e in time) {
        refs[e].textContent = addLeadingZero(time[e]);
    };
}

function convertMs(ms) {
    const second = 1000;
    const minute = second * 60;
    const hour = minute * 60;
    const day = hour * 24;

    // Remaining days
    const days = Math.floor(ms / day);
    // Remaining hours
    const hours = Math.floor((ms % day) / hour);
    // Remaining minutes
    const minutes = Math.floor(((ms % day) % hour) / minute);
    // Remaining seconds
    const seconds = Math.floor((((ms % day) % hour) % minute) / second);

    return { days, hours, minutes, seconds };
};

function addLeadingZero(value) {
    return String(value).padStart(2,"0");
};





// =============================================================================================





// import flatpickr from "flatpickr";
// import "flatpickr/dist/flatpickr.min.css";
// // import { Notify } from 'notiflix/build/notiflix-notify-aio';

// const refs = {
//     button: document.querySelector('button[data-start]'),
//     days: document.querySelector('[data-days]'),
//     hours: document.querySelector('[data-hours]'),
//     minutes: document.querySelector('[data-minutes]'),
//     seconds: document.querySelector('[data-seconds]')
// };

// refs.button.addEventListener('click', onBtnClick);

// refs.button.setAttribute('disabled', 'true');
// let isTimerRuning = false;
// let timerId = null;
// let userSelectedDate = null;

// // options for instance (date-view):
// const options = {
//     enableTime: true,
//     time_24hr: true,
//     defaultDate: new Date(),
//     minuteIncrement: 1,
//     onClose(selectedDates) {   
    
//         if (selectedDates[0].getTime() <= Date.now()){
//             window.alert('Please choose a date in the future');  
//             return; 
//         };
        
//         userSelectedDate = selectedDates[0];
//         refs.button.removeAttribute('disabled');
//     },
//     onOpen(){
        
//         clearInterval(timerId);
//         isTimerRuning = false;
//         refs.button.setAttribute('disabled', 'true');

//         refs.days.textContent = '00';
//         refs.hours.textContent = '00';
//         refs.minutes.textContent = '00';
//         refs.seconds.textContent = '00';
//     }
// };

// console.log(userSelectedDate);

// //makes instance for date-view: 
// flatpickr('#datetime-picker', options);

// //Hendle Button Click:
// function onBtnClick(){
//     if(isTimerRuning) return;
    
//     isTimerRuning = true;

//     timerId = setInterval(() => {
//         let currentDate = Date.now();
//         let convertUserSelectedDate = userSelectedDate.getTime();
//         let diference = convertUserSelectedDate - currentDate;

//         refs.days.textContent = convertMs(diference).days;
//         refs.hours.textContent = convertMs(diference).hours;
//         refs.minutes.textContent = convertMs(diference).minutes;
//         refs.seconds.textContent = convertMs(diference).seconds;
        
//     }, 1000);
// };

// function convertMs(ms) {
//     // Number of milliseconds per unit of time
//     const second = 1000;
//     const minute = second * 60;
//     const hour = minute * 60;
//     const day = hour * 24;

//     // Remaining days
//     const days = addLeadingZero(Math.floor(ms / day));
//     // Remaining hours
//     const hours = addLeadingZero(Math.floor((ms % day) / hour));
//     // Remaining minutes
//     const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));
//     // Remaining seconds
//     const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));

//     return { days, hours, minutes, seconds };
// };

// function addLeadingZero(value){
//     return String(value).padStart(2, '0');
// };

// //Shown(log) messsage view options:
// // Notify.init({
// //     width: '280px',
// //     position: 'center-top',
// //     distance: '25px',
// //     timeout: 3000,
// //     cssAnimationStyle: 'zoom',
// //     warning: {
// //         background: 'rgba(255, 72, 0, 0.945)',
// //         textColor: '#fff',
// //         notiflixIconColor: 'rgba(0,0,0,0.4)',
// //     },
// // });



